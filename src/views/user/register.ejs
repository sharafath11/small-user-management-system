<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Register</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background: linear-gradient(to right, #4e73df, #1cc88a);
      height: 100vh;
      margin: 0;
      font-family: 'Arial', sans-serif;
      display: flex;
      justify-content: center;
      align-items: center;
      overflow: hidden;
    }
    .register-container {
      background: #fff;
      padding: 30px;
      border-radius: 8px;
      box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);
      width: 100%;
      max-width: 400px;
      text-align: center;
      animation: fadeIn 1s ease-in-out;
    }
    .register-container h2 {
      color: #333;
      font-weight: 600;
      font-size: 24px;
      margin-bottom: 20px;
    }
    .form-control {
      border-radius: 25px;
      padding: 10px 15px;
      margin-bottom: 15px;
      font-size: 14px;
    }
    .btn-primary {
      background-color: #1cc88a;
      border-color: #1cc88a;
      border-radius: 25px;
      padding: 10px 15px;
      font-size: 14px;
      width: 100%;
      transition: background-color 0.3s ease;
    }
    .btn-primary:hover {
      background-color: #17a673;
      border-color: #17a673;
    }
    .btn-secondary {
      margin-top: 10px;
      background-color: transparent;
      border: 2px solid #1cc88a;
      color: #1cc88a;
      border-radius: 25px;
      padding: 10px 15px;
      font-size: 14px;
      width: 100%;
      transition: all 0.3s ease;
    }
    .btn-secondary:hover {
      background-color: #1cc88a;
      color: white;
    }
    #errorMessage, #successMessage {
      display: none;
      margin-top: 15px;
      font-size: 13px;
    }
    .alert-danger {
      color: red;
    }
    .alert-success {
      color: green;
    }
    @keyframes fadeIn {
      0% {
        opacity: 0;
        transform: translateY(-30px);
      }
      100% {
        opacity: 1;
        transform: translateY(0);
      }
    }
  </style>
</head>
<body>
  <div class="register-container">
    <h2>Register</h2>
    <form id="registerForm">
      <div class="mb-3">
        <label for="username" class="form-label">Username</label>
        <input type="text" class="form-control" id="username" placeholder="Enter your username" required>
      </div>
      <div class="mb-3">
        <label for="email" class="form-label">Email</label>
        <input type="email" class="form-control" id="email" placeholder="Enter your email" required>
      </div>
      <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <input type="password" class="form-control" id="password" placeholder="Enter your password" required>
      </div>
      <div class="mb-3">
        <label for="confirmPassword" class="form-label">Confirm Password</label>
        <input type="password" class="form-control" id="confirmPassword" placeholder="Confirm your password" required>
      </div>
      <button type="submit" class="btn btn-primary">Register</button>
    </form>
    <div id="errorMessage" class="alert alert-danger mt-3"></div>
    <div id="successMessage" class="alert alert-success mt-3"></div>
    <button class="btn-secondary" id="loginBtn">Already have an account? Login</button>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

  <script>
    document.getElementById("registerForm").addEventListener("submit", async function(e) {
  e.preventDefault();
  const username = document.getElementById("username").value.trim();
  const email = document.getElementById("email").value.trim();
  const password = document.getElementById("password").value.trim();
  const confirmPassword = document.getElementById("confirmPassword").value.trim();
  if (!username) {
    showToast("Username cannot be empty or only spaces!", "error");
    return;
  }
  if (username.length < 3) {
    showToast("Username must be at least 3 characters long!", "error");
    return;
  }
  const passwordRegex = /^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
  if (!passwordRegex.test(password)) {
    showToast(
      "Password must be at least 8 characters long and include a letter, a number, and a special character!",
      "error"
    );
    return;
  }
  if (password !== confirmPassword) {
    showToast("Passwords do not match!", "error");
    return;
  }

  try {
    const response = await axios.post("/register", {
      username,
      email,
      password,
    });

    if (response.data.ok) {
      showToast("Registration successful!", 'success');
      setTimeout(() => {
      window.location.href = "/"; 
}, 2000);
    } else {
      showToast(response.data.message);
    }
  } catch (error) {
    showToast("An error occurred. Please try again!", 'error');
  }
});

    document.getElementById("loginBtn").addEventListener("click", function() {
      window.location.href = "/login";
    });

  function showToast(message, type = 'info') {
  let backgroundColor;
  switch (type) {
    case 'success':
      backgroundColor = '#28a745'; 
      break;
    case 'error':
      backgroundColor = '#dc3545'; 
      break;
    case 'info':
    default:
      backgroundColor = '#17a2b8'; 
      break;
  }

  Toastify({
    text: message,
    duration: 3000,
    close: true,
    gravity: 'top', 
    position: 'right', 
    backgroundColor: backgroundColor,
    stopOnFocus: true, 
  }).showToast();
}
  </script>
</body>
</html>
