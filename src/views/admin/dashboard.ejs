<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - User List</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 20px;
            background-color: #f0f4f9;
            color: #2c3e50;
        }
        h1 {
            text-align: center;
            color: #34495e;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
            background: #ffffff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            overflow: hidden;
        }
        th, td {
            padding: 12px 15px;
            text-align: left;
            border: 1px solid #dcdde1;
        }
        th {
            background-color: #3498db;
            color: #fff;
            font-weight: bold;
        }
        tr:nth-child(even) {
            background-color: #f9fbfd;
        }
        tr:hover {
            background-color: #ecf3fc;
        }
        .action-buttons {
            display: flex;
            gap: 10px;
        }
        .btn {
            padding: 8px 12px;
            border: none;
            cursor: pointer;
            color: #fff;
            border-radius: 5px;
            transition: background-color 0.3s ease;
        }
        .btn-edit {
            background-color: #27ae60;
        }
        .btn-edit:hover {
            background-color: #2ecc71;
        }
        .btn-delete {
            background-color: #e74c3c;
        }
        .btn-delete:hover {
            background-color: #f1948a;
        }
        .btn-logout {
            background-color: #8e44ad;
            margin-bottom: 20px;
        }
        .btn-logout:hover {
            background-color: #9b59b6;
        }
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }
        .modal-content {
            background: #ffffff;
            padding: 20px;
            border-radius: 8px;
            width: 400px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        .modal-header {
            font-size: 20px;
            color: #2c3e50;
            margin-bottom: 10px;
        }
        .modal-body {
            margin-bottom: 20px;
        }
        .modal-footer {
            text-align: right;
        }
        .modal-footer .btn {
            margin-left: 10px;
        }
    </style>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
</head>
<body>
    <h1>Admin Dashboard - User List</h1>
    <button class="btn btn-logout" onclick="logout()">Logout</button>

    <table>
        <thead>
            <tr>
                <th>No.</th>
                <th>Name</th>
                <th>Email</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <% users.forEach((user, index) => { %>
                <tr>
                    <td><%= index + 1 %></td>
                    <td><%= user.username %></td>
                    <td><%= user.email %></td>
                    <td>
                        <div class="action-buttons">
                            <button class="btn btn-edit" onclick="showEditModal('<%= user._id %>', '<%= user.username %>')">Edit</button>
                            <button class="btn btn-delete" onclick="deleteUser('<%= user._id %>')">Delete</button>
                        </div>
                    </td>
                </tr>
            <% }); %>
        </tbody>
    </table>

    <div class="modal" id="editModal">
        <div class="modal-content">
            <div class="modal-header">Edit User</div>
            <div class="modal-body">
                <label for="userName">Name:</label>
                <input type="text" id="userName" placeholder="Enter new name" style="width: 100%; padding: 8px;">
            </div>
            <div class="modal-footer">
                <button class="btn btn-edit" onclick="saveChanges()">Save</button>
                <button class="btn btn-delete" onclick="closeModal()">Cancel</button>
            </div>
        </div>
    </div>

    <script>
        let currentUserId = null;

        function showEditModal(userId, userName) {
            currentUserId = userId;
            document.getElementById('userName').value = userName;
            document.getElementById('editModal').style.display = 'flex';
        }

        function closeModal() {
            document.getElementById('editModal').style.display = 'none';
        }

        async function saveChanges() {
    const newName = document.getElementById('userName').value.trim();
    if (!newName) {
        Swal.fire('Error', 'Name cannot be empty.', 'error');
        return;
    }

    const confirmation = await Swal.fire({
        title: 'Are you sure?',
        text: 'Do you want to save these changes?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, save it!'
    });

    if (confirmation.isConfirmed) {
        try {
            const response = await axios.post('/admin/edit', { currentUserId, newName });
            if (response.data.ok) {
                Swal.fire('Success', response.data.msg, 'success').then(() => {
                    closeModal();
                    location.reload();
                });
            } else {
                Swal.fire('Error', response.data.msg, 'error');
            }
        } catch (error) {
            Swal.fire('Error', 'An error occurred. Please try again.', 'error');
        }
    }
}
        async function deleteUser(userId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "This action cannot be undone!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#e74c3c',
                cancelButtonColor: '#95a5a6',
                confirmButtonText: 'Yes, delete it!'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        const response = await axios.post(`/admin/delete`,{userId});
                        if (response.data.ok) {
                            showToast(response.data.msg, 'success');
                            location.reload();
                        } else {
                            showToast(response.data.msg, 'error');
                        }
                    } catch (error) {
                        showToast('An error occurred. Please try again.', 'error');
                    }
                }
            });
        }

        async function logout() {
            try {
                const response = await axios.post('/admin/logout');
                if (response.data.ok) {
                    window.location.href = '/';
                } else {
                    Swal.fire('Error', 'Logout failed.', 'error');
                }
            } catch (error) {
                Swal.fire('Error', 'An error occurred. Please try again.', 'error');
            }
        }

        function showToast(message, type = 'info') {
            let backgroundColor = {
                success: '#28a745',
                error: '#dc3545',
                info: '#17a2b8'
            }[type] || '#17a2b8';

            Toastify({
                text: message,
                duration: 3000,
                close: true,
                gravity: 'top',
                position: 'right',
                backgroundColor,
                stopOnFocus: true,
            }).showToast();
        }
    </script>
</body>
</html>
